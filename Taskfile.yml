# https://taskfile.dev

version: '3'

set: [errexit, pipefail]

tasks:
  default:
    cmds:
      - task: datendienst
      - task: lobid-download
      - task: lobid-filter
      - task: lobid-extract
      - task: wikidata
      - task: output
    
  datendienst:
    desc: Download von GND-IDs aus dem DLA Datendienst
    dir: data
    cmds:
      - curl --silent --compressed 'https://dataservice.dla-marbach.de/v1/records?q=gnd_id_mv:%2A%20AND%20source:AK&fields=gnd_id_mv&format=jsonl' | cut -d '"' -f 4 | LC_ALL=POSIX sort -u > gnd-ak.txt
      - curl --silent --compressed 'https://dataservice.dla-marbach.de/v1/records?q=gnd_id_mv:%2A%20AND%20source:KS&fields=gnd_id_mv&format=jsonl' | cut -d '"' -f 4 | LC_ALL=POSIX sort -u > gnd-ks.txt
      - curl --silent --compressed 'https://dataservice.dla-marbach.de/v1/records?q=gnd_id_mv:%2A%20AND%20source:PE&fields=gnd_id_mv&format=jsonl' | cut -d '"' -f 4 | LC_ALL=POSIX sort -u > gnd-pe.txt
    preconditions:
      - command -v curl

  lobid-download:
    desc: Bulk-Download der GND als JSON-Lines über lobid-gnd
    dir: data
    cmds:
      - curl -A "DLA Marbach OPAC Enrichment; mailto:dla@felixlohmeier.de" --silent --compressed 'https://lobid.org/gnd/search?q=type:Work&format=jsonl' | gzip > lobid-download-ak.jsonl.gz
      - curl -A "DLA Marbach OPAC Enrichment; mailto:dla@felixlohmeier.de" --silent --compressed 'https://lobid.org/gnd/search?q=type:Person&format=jsonl' | gzip > lobid-download-pe.jsonl.gz
      - curl -A "DLA Marbach OPAC Enrichment; mailto:dla@felixlohmeier.de" --silent --compressed 'https://lobid.org/gnd/search?q=type:CorporateBody&format=jsonl' | gzip > lobid-download-ks.jsonl.gz
    preconditions:
      - command -v curl
      - command -v gzip

  lobid-filter:
    desc: GND-Download reduzieren auf im DLA verwendete GND-IDs
    dir: data
    cmds:
      - python3 ../lobid-filter.py lobid-download-ak.jsonl.gz gnd-ak.txt | gzip > lobid-filtered-ak.jsonl.gz
      - python3 ../lobid-filter.py lobid-download-pe.jsonl.gz gnd-pe.txt | gzip > lobid-filtered-pe.jsonl.gz
      - python3 ../lobid-filter.py lobid-download-ks.jsonl.gz gnd-ks.txt | gzip > lobid-filtered-ks.jsonl.gz
    sources:
      - lobid-download-*.jsonl.gz
      - gnd-*.txt
      - ../lobid-filter.py
    generates:
      - lobid-filtered-*.jsonl.gz
    preconditions:
      - command -v python3
      - command -v gzip

  lobid-extract:
    desc: Gewünschte Daten in einzelne Tabellen extrahieren
    dir: data
    cmds:
      # Wikidata
      - zcat lobid-filtered-ak.jsonl.gz | jq -r 'try .gndIdentifier as $id | .sameAs[].id | match("http://www.wikidata.org/entity/(.*)").captures[].string | [$id, .] | @tsv' | LC_ALL=POSIX sort -u > lobid-wikidata-ak.tsv
      - zcat lobid-filtered-ks.jsonl.gz | jq -r 'try .gndIdentifier as $id | .sameAs[].id | match("http://www.wikidata.org/entity/(.*)").captures[].string | [$id, .] | @tsv' | LC_ALL=POSIX sort -u > lobid-wikidata-ks.tsv
      - zcat lobid-filtered-pe.jsonl.gz | jq -r 'try .gndIdentifier as $id | .sameAs[].id | match("http://www.wikidata.org/entity/(.*)").captures[].string | [$id, .] | @tsv' | LC_ALL=POSIX sort -u > lobid-wikidata-pe.tsv
      # Wikipedia
      - zcat lobid-filtered-ak.jsonl.gz | jq -r 'try .gndIdentifier as $id | .sameAs[].id | match("https://de.wikipedia.org/wiki/(.*)").captures[].string | [$id, .] | @tsv' | LC_ALL=POSIX sort -u > lobid-wikipedia-ak.tsv
      - zcat lobid-filtered-ks.jsonl.gz | jq -r 'try .gndIdentifier as $id | .sameAs[].id | match("https://de.wikipedia.org/wiki/(.*)").captures[].string | [$id, .] | @tsv' | LC_ALL=POSIX sort -u > lobid-wikipedia-ks.tsv
      - zcat lobid-filtered-pe.jsonl.gz | jq -r 'try .gndIdentifier as $id | .sameAs[].id | match("https://de.wikipedia.org/wiki/(.*)").captures[].string | [$id, .] | @tsv' | LC_ALL=POSIX sort -u > lobid-wikipedia-pe.tsv
      # Commons (depiction)
      - zcat lobid-filtered-ks.jsonl.gz | jq -r 'try .gndIdentifier as $id | .depiction[].id | match("https://commons.wikimedia.org/wiki/Special:FilePath/(.*)").captures[].string | [$id, .] | @tsv' | LC_ALL=POSIX sort -u > lobid-commons-ks.tsv
      - zcat lobid-filtered-pe.jsonl.gz | jq -r 'try .gndIdentifier as $id | .depiction[].id | match("https://commons.wikimedia.org/wiki/Special:FilePath/(.*)").captures[].string | [$id, .] | @tsv' | LC_ALL=POSIX sort -u > lobid-commons-pe.tsv
      # Filmportal
      - zcat lobid-filtered-pe.jsonl.gz | jq -r 'try .gndIdentifier as $id | .sameAs[].id | match("https://www.filmportal.de/(.*)").captures[].string | [$id, .] | @tsv' | LC_ALL=POSIX sort -u > lobid-filmportal-pe.tsv
      # Deutsche Biographie
      - zcat lobid-filtered-pe.jsonl.gz | jq -r 'try .gndIdentifier as $id | .sameAs[].id | match("https://www.deutsche-biographie.de/(.*)").captures[].string | [$id, .] | @tsv' | LC_ALL=POSIX sort -u > lobid-deutsche-biographie-pe.tsv
    sources:
      - lobid-filtered-*.jsonl.gz
    generates:
      - lobid-*.tsv

  wikidata:
    desc: Mit den aus lobid-extract ermittelten Wikidata IDs den Wikidata Query Service abfragen
    dir: data
    cmds:
      - cut -f 2 lobid-wikidata-ak.tsv | LC_ALL=POSIX sort -u > qid-ak.txt
      - cut -f 2 lobid-wikidata-ks.tsv | LC_ALL=POSIX sort -u > qid-ks.txt
      - cut -f 2 lobid-wikidata-pe.tsv | LC_ALL=POSIX sort -u > qid-pe.txt
      - python3 ../wikidata-extract.py qid-ak.txt ak P18,P856,P2639
      - cd ak; for f in *.tsv; do mv ${f} ../wikidata-${f%.tsv}-ak.tsv; done; cd ..; rm -r ak
      - python3 ../wikidata-extract.py qid-ks.txt ks P18,P856,P2639
      - cd ks; for f in *.tsv; do mv ${f} ../wikidata-${f%.tsv}-ks.tsv; done; cd ..; rm -r ks
      - python3 ../wikidata-extract.py qid-pe.txt pe P18,P856,P2639,P109
      - cd pe; for f in *.tsv; do mv ${f} ../wikidata-${f%.tsv}-pe.tsv; done; cd ..; rm -r pe
    sources:
      - lobid-wikidata-*.tsv
      - ../wikidata-extract.py
    generates:
      - qid-*.txt
      - wikidata-*.tsv
    preconditions:
      - command -v jq

  output:
    desc: Plausibilitätsprüfung und ggf. Kopie der Daten in das Verzeichnis output
    dir: data
    cmds:
      - |
        for f in *.tsv; do
          old="$(wc -l < ../output/${f} || echo 0)"
          new="$(wc -l < ${f})"
          if ((new+10 >= old));
          then
            echo "$f $((new-old))"
          else
            echo 1>&2 "Generierter Cache für ${f} scheint zu klein zu sein! Bitte manuell prüfen."
            echo 1>&2 "Differenz: $((new-old))"
            exit 2
          fi
        done
      - cp *.tsv ../output/
    sources:
      - ./*.tsv
    generates:
      - ../output/*.tsv
